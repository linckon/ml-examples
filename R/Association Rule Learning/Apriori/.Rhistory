# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/home/y34h1a/StudioProjects/Mechine Learning Examples/Data/Market_Basket_Optimisation.csv', header = FALSE)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/home/y34h1a/StudioProjects/Mechine Learning Examples/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/home/y34h1a/StudioProjects/Mechine Learning Examples/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.004, confidence = 0.2))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.2))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.005, confidence = 0.2))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.005, confidence = 0.6))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.4))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.4))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.8))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.6))
View(rules)
View(rules)
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.6))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset = read.csv('/Data/Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('/Data/Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.6))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:12])
# Visualising the results
inspect(sort(rules, by = 'lift')[1:12])
# Visualising the results
inspect(sort(rules, by = 'lift')[1:12])
# Visualising the results
inspect(sort(rules, by = 'lift')[1:12])
# Visualising the results
inspect(sort(rules, by = 'lift')[1:12])
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.2))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.005, confidence = 0.2))
# Visualising the results
inspect(sort(rules, by = 'lift')[1:10])
